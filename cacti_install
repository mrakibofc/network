Welcome to our comprehensive tutorial on configuring a Cacti server with the Weather Map plugin on Ubuntu 22.04! In this step-by-step guide, we'll walk you through the entire process, making it easy to monitor your network with Cacti and visualize network weather data using the Weather Map plugin.

*Prerequisites:*
Before we begin, ensure you have a clean Ubuntu 22.04 server ready and a basic understanding of Linux server administration.

Follow our easy-to-follow instructions to set up Cacti for network monitoring and enhance it with the Weather Map plugin. Whether you're an IT professional, network administrator, or just someone looking to manage their network effectively, this tutorial is designed for you.

Don't forget to like, subscribe, and hit the notification bell to stay updated with our latest tutorials on Linux server administration, network monitoring, and more!

If you have any questions or encounter any issues during the configuration process, please leave a comment below, and we'll be happy to assist you.

Thanks for watching!

---

*Steps*

apt update
apt install apache2
systemctl status apache2
systemctl enable --now apache2
apt install php php-{mysql,curl,net-socket,gd,intl,pear,imap,memcache,pspell,tidy,xmlrpc,snmp,mbstring,gmp,json,xml,common,ldap}
apt install libapache2-mod-php
vim /etc/php/8.1/apache2/php.ini

memory_limit = 512M
max_execution_time = 300
date.timezone = Asia/Kolkata

vim /etc/php/8.1/cli/php.ini

date.timezone = Asia/Kolkata

apt install mariadb-server -y
systemctl status mariadb
systemctl enable --now mariadb
mysql

CREATE DATABASE cacti DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
GRANT ALL PRIVILEGES ON cacti.* TO 'cacti_user'@'localhost' IDENTIFIED BY 'Password';
GRANT SELECT ON mysql.time_zone_name TO cacti_user@localhost;
ALTER DATABASE cacti CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
FLUSH PRIVILEGES;
EXIT;

vim /etc/mysql/mariadb.conf.d/50-server.cnf

Copy and Add the following given line under– [mariadb]
------------------------------------------------------
innodb_file_format=Barracuda
innodb_large_prefix=1
collation-server=utf8mb4_unicode_ci
character-set-server=utf8mb4
innodb_doublewrite=OFF
max_heap_table_size=128M
tmp_table_size=128M
join_buffer_size=128M
innodb_buffer_pool_size=1G
innodb_flush_log_at_timeout=3
innodb_read_io_threads=32
innodb_write_io_threads=16
innodb_io_capacity=5000
innodb_io_capacity_max=10000
innodb_buffer_pool_instances=9

add # tag in front of these two lines available in the same file to make them unreadable
----------------------------------------------------------------------------------------
#character-set-server = utf8mb4
#collation-server = utf8mb4_general_ci

mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root -p mysql
apt install snmp snmpd rrdtool
apt install git
git clone -b 1.2.x https://github.com/Cacti/cacti.git
ls
mv cacti /var/www/html

Use the Cacti SQL configuration file to pre-populate the database created for it.
---------------------------------------------------------------------------------
mysql -u root cacti  /var/www/html/cacti/cacti.sql

cd /var/www/html/cacti/include
cp config.php.dist config.php
vim config.php

Change the Database values – Database name, username, and password.

chown -R www-data:www-data /var/www/html/cacti

Create Cacti Systemd service
----------------------------
vim /etc/systemd/system/cactid.service

Add the following lines:
------------------------
[Unit]
Description=Cacti Daemon Main Poller Service
After=network.target

[Service]
Type=forking
User=www-data
Group=www-data
EnvironmentFile=/etc/default/cactid
ExecStart=/var/www/html/cacti/cactid.php
Restart=always
RestartSec=5s

[Install]
WantedBy=multi-user.target

-----
Create an environment file:
---------------------------
touch /etc/default/cactid

Start the daemon
-----------------
systemctl daemon-reload
systemctl status cactid
systemctl enable --now cactid
systemctl status cactid

systemctl restart apache2 mariadb

Login Cacti monitoring on Ubuntu 22.04
---------------------------------------
http://server-IP-address/cacti/

Start Cacti web installation.


Let’s Add the WeatherMap Plugin to Our Cacti Server
---------------------------------------------------
git clone https://github.com/Cacti/plugin_weath...
ls
mv plugin_weathermap weathermap
cp weathermap /var/www/html/cacti/plugins/
cd /var/www/html/cacti/plugins/
chmod -R 777 weathermap/
systemctl restart cactid

====================================

Install Cacti Network Monitoring Tool on Ubuntu 20.04
======================================================
apt-get update -y

apt upgrade -y

apt-get install snmp php-snmp rrdtool librrds-perl unzip curl git gnupg2 -y
apt install mariadb-server mariadb-client -y
sudo apt install rrdtool snmp snmpd snmp-mibs-downloader libsnmp-dev
apt-get install apache2 mariadb-server php php-mysql libapache2-mod-php php-xml php-ldap php-mbstring php-gd php-gmp -y


cd /etc/php/7.4/apache2/
ls -l
cp php.ini php.ini.bkp
nano php.ini

search ctrl+w and write then change below line.

memory_limit = 512M
max_execution_time = 60
date.timezone = Asia/Dhaka

sudo systemctl start apache2
sudo systemctl enable apache2
systemctl restart apache2

cd /etc/mysql/mariadb.conf.d/
ls -l
cp 50-server.cnf 50-server.cnf.bkp
nano /etc/mysql/mariadb.conf.d/50-server.cnf




Add / Modify the following lines inside [mysqld] section:

collation-server = utf8mb4_unicode_ci
max_heap_table_size = 128M
tmp_table_size = 64M
join_buffer_size = 64M
innodb_file_format = Barracuda
innodb_large_prefix = 1
innodb_buffer_pool_size = 512M
innodb_flush_log_at_timeout = 3
innodb_read_io_threads = 32
innodb_write_io_threads = 16
innodb_io_capacity = 5000
innodb_io_capacity_max = 10000

systemctl start mariadb
systemctl enable mariadb
systemctl restart mariadb

mysql -u root -p

create database cactidb;
GRANT ALL ON cactidb.* TO 'cacti'@'localhost' IDENTIFIED BY 'password';
flush privileges;
exit;


MariaDB [(none)]> create database cactidb;
Query OK, 1 row affected (0.000 sec)

MariaDB [(none)]> GRANT ALL ON cactidb.* TO 'cacti'@'localhost' IDENTIFIED BY 'password';
Query OK, 0 rows affected (0.000 sec)

MariaDB [(none)]> flush privileges;
Query OK, 0 rows affected (0.000 sec)

exit;

cd /usr/share/mysql/

ls -l

mysql mysql < /usr/share/mysql/mysql_test_data_timezone.sql

mysql -u root -p

GRANT SELECT ON mysql.time_zone_name TO 'cacti'@'localhost';

MariaDB [(none)]> GRANT SELECT ON mysql.time_zone_name TO 'cacti'@'localhost';
Query OK, 0 rows affected (0.000 sec)

MariaDB [(none)]> flush privileges;
Query OK, 0 rows affected (0.000 sec)

MariaDB [(none)]> exit;
Bye
root@linux:/usr/share/mysql#


wget https://www.cacti.net/downloads/cacti-latest.tar.gz

tar -zxvf cacti-latest.tar.gz

mkdir -p /var/www/html/cacti
cp -r cacti/* /var/www/html/cacti

mysql cactidb < /var/www/html/cacti/cacti.sql

cd /var/www/html/cacti/include/
cp config.php config.php.bkp
nano config.php


$database_type     = 'mysql';
$database_default  = 'cactidb';
$database_hostname = 'localhost';
$database_username = 'cactiuser';
$database_password = 'password';
$database_port     = '3306';

touch /var/www/html/cacti/log/cacti.log

root@linux:~# chown -R www-data:www-data /var/www/html/cacti/
root@linux:~# chmod -R 775 /var/www/html/cacti/

nano /etc/cron.d/cacti
*/5 * * * * www-data php /var/www/html/cacti/poller.php > /dev/null 2>&1

nano /etc/apache2/sites-available/cacti.conf

Alias /cacti /var/www/html/cacti

  <Directory /var/www/html/cacti>
      Options +FollowSymLinks
      AllowOverride None
      <IfVersion >= 2.3>
      Require all granted
      </IfVersion>
      <IfVersion < 2.3>
      Order Allow,Deny
      Allow from all
      </IfVersion>

   AddType application/x-httpd-php .php

<IfModule mod_php.c>
      php_flag magic_quotes_gpc Off
      php_flag short_open_tag On
      php_flag register_globals Off
      php_flag register_argc_argv On
      php_flag track_vars On
      # this setting is necessary for some locales
      php_value mbstring.func_overload 0
      php_value include_path .
 </IfModule>

  DirectoryIndex index.php
</Directory>


a2ensite cacti
systemctl restart apache2

nano php.ini
search ctrl+w
date.timezone	Asia/Dhaka


apt install php-intl






